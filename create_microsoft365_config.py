#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Microsoft 365чФишинхоЪуГХуВбуВдуГлф╜ЬцИРуВ╣уВпуГкуГЧуГИ
OAuth2шкНши╝шинхоЪуВТхРлуВА
"""

import configparser
import os
from datetime import datetime

def create_microsoft365_config():
    """Microsoft 365чФиуБошинхоЪуГХуВбуВдуГлуВТф╜ЬцИР"""
    print("ЁЯФз Microsoft 365чФишинхоЪуГХуВбуВдуГлф╜ЬцИР")
    print("=" * 60)
    
    print("ЁЯУЭ Azure AD уВвуГЧуГкуВ▒уГ╝уВ╖уГзуГ│цГЕха▒уВТхЕехКЫуБЧуБжуБПуБауБХуБД:")
    print("я╝ИAzure Portal > Azure Active Directory > уВвуГЧуГкуБочЩ╗щМ▓ уБзчв║шкНя╝Й")
    
    # Azure ADцГЕха▒уБохЕехКЫ
    tenant_id = input("уГЖуГКуГ│уГИID (Directory ID): ").strip()
    client_id = input("уВпуГйуВдуВвуГ│уГИID (Application ID): ").strip()
    client_secret = input("уВпуГйуВдуВвуГ│уГИуВ╖уГ╝уВпуГмуГГуГИ: ").strip()
    
    if not all([tenant_id, client_id, client_secret]):
        print("тЭМ х┐ЕшжБуБкцГЕха▒уБМхЕехКЫуБХуВМуБжуБДуБ╛уБЫуВУ")
        return False
    
    # уГбуГ╝уГлуВвуГЙуГмуВ╣чв║шкН
    email_address = input("уГбуГ╝уГлуВвуГЙуГмуВ╣ [client@hugan.co.jp]: ").strip()
    if not email_address:
        email_address = "client@hugan.co.jp"
    
    # шинхоЪуГХуВбуВдуГлф╜ЬцИР
    config = configparser.ConfigParser()
    
    # SMTPшинхоЪ
    config.add_section('SMTP')
    config.set('SMTP', 'server', 'smtp.office365.com')
    config.set('SMTP', 'port', '587')
    config.set('SMTP', 'username', email_address)
    config.set('SMTP', 'sender_name', 'HUGAN JOB')
    config.set('SMTP', 'from_name', 'HUGAN JOB')
    config.set('SMTP', 'from_email', email_address)
    config.set('SMTP', 'reply_to', email_address)
    config.set('SMTP', 'auth_method', 'oauth2')
    
    # OAuth2шинхоЪ
    config.add_section('OAUTH2')
    config.set('OAUTH2', 'tenant_id', tenant_id)
    config.set('OAUTH2', 'client_id', client_id)
    config.set('OAUTH2', 'client_secret', client_secret)
    config.set('OAUTH2', 'scope', 'https://graph.microsoft.com/.default')
    config.set('OAUTH2', 'grant_type', 'client_credentials')
    
    # щАБф┐бхИ╢х╛бшинхоЪ
    config.add_section('SENDING')
    config.set('SENDING', 'batch_size', '10')
    config.set('SENDING', 'delay_between_emails', '3')
    config.set('SENDING', 'delay_between_batches', '60')
    config.set('SENDING', 'max_retries', '3')
    
    # ш┐╖цГСуГбуГ╝уГлхп╛чнЦшинхоЪ
    config.add_section('ANTI_SPAM')
    config.set('ANTI_SPAM', 'use_html_format', 'true')
    config.set('ANTI_SPAM', 'add_tracking_pixel', 'true')
    config.set('ANTI_SPAM', 'use_multipart_alternative', 'true')
    config.set('ANTI_SPAM', 'send_interval', '3')
    config.set('ANTI_SPAM', 'enable_bounce_handling', 'true')
    config.set('ANTI_SPAM', 'use_microsoft365_features', 'true')
    
    # уГнуВ░шинхоЪ
    config.add_section('LOGGING')
    config.set('LOGGING', 'level', 'INFO')
    config.set('LOGGING', 'file', 'logs/microsoft365_email.log')
    config.set('LOGGING', 'max_size', '10MB')
    config.set('LOGGING', 'backup_count', '5')
    
    # уГкуГИуГйуВдшинхоЪ
    config.add_section('RETRY')
    config.set('RETRY', 'retry_count', '3')
    config.set('RETRY', 'retry_delay', '5')
    
    # уГХуВбуВдуГлф┐ЭхнШ
    config_path = 'config/microsoft365_email_config.ini'
    os.makedirs('config', exist_ok=True)
    
    with open(config_path, 'w', encoding='utf-8') as f:
        config.write(f)
    
    print(f"тЬЕ шинхоЪуГХуВбуВдуГлуВТф╜ЬцИРуБЧуБ╛уБЧуБЯ: {config_path}")
    
    # шинхоЪхЖЕхо╣уБошбичд║
    print("\nЁЯУЛ ф╜ЬцИРуБХуВМуБЯшинхоЪ:")
    print(f"  SMTP уВ╡уГ╝уГРуГ╝: smtp.office365.com:587")
    print(f"  шкНши╝цЦ╣х╝П: OAuth2")
    print(f"  уГбуГ╝уГлуВвуГЙуГмуВ╣: {email_address}")
    print(f"  уГЖуГКуГ│уГИID: {tenant_id}")
    print(f"  уВпуГйуВдуВвуГ│уГИID: {client_id}")
    
    # Azure ADшинхоЪчв║шкНф║ЛщаЕ
    print("\nЁЯУЭ Azure ADшинхоЪчв║шкНф║ЛщаЕ:")
    print("1. уВвуГЧуГкуВ▒уГ╝уВ╖уГзуГ│уБочЩ╗щМ▓уБМхоМф║ЖуБЧуБжуБДуВЛуБУуБи")
    print("2. ф╗еф╕ЛуБоAPIуВвуВпуВ╗уВ╣ши▒хПпуБМшинхоЪуБХуВМуБжуБДуВЛуБУуБи:")
    print("   - Microsoft Graph > Mail.Send (Application)")
    print("   - Microsoft Graph > User.Read (Application)")
    print("3. чобчРЖшАЕуБохРМцДПуБМф╕ОуБИуВЙуВМуБжуБДуВЛуБУуБи")
    print("4. уВпуГйуВдуВвуГ│уГИуВ╖уГ╝уВпуГмуГГуГИуБМцЬЙхК╣уБзуБВуВЛуБУуБи")
    
    # цмбуБоуВ╣уГЖуГГуГЧ
    print("\nЁЯЪА цмбуБоуВ╣уГЖуГГуГЧ:")
    print("1. Azure ADшинхоЪуБочв║шкН")
    print("2. python microsoft365_email_sender.py уБзуГЖуВ╣уГИхоЯшбМ")
    print("3. щАБф┐бч╡РцЮЬуБочв║шкН")
    
    return True

def show_azure_setup_guide():
    """Azure ADшинхоЪуВмуВдуГЙуБошбичд║"""
    print("\n" + "=" * 80)
    print("ЁЯУЪ Azure AD уВвуГЧуГкуВ▒уГ╝уВ╖уГзуГ│шинхоЪуВмуВдуГЙ")
    print("=" * 80)
    
    print("\nЁЯФз Azure Portal уБзуБошинхоЪцЙЛщаЖ:")
    print("1. Azure Portal (https://portal.azure.com) уБлуГнуВ░уВдуГ│")
    print("2. 'Azure Active Directory' уВТщБ╕цКЮ")
    print("3. 'уВвуГЧуГкуБочЩ╗щМ▓' уВТщБ╕цКЮ")
    print("4. 'цЦ░шжПчЩ╗щМ▓' уВТуВпуГкуГГуВп")
    print("5. уВвуГЧуГкуВ▒уГ╝уВ╖уГзуГ│хРН: 'HUGAN JOB Mail System'")
    print("6. уВ╡уГЭуГ╝уГИуБХуВМуБжуБДуВЛуВвуВлуВжуГ│уГИуБочиощбЮ: 'хНШф╕АуГЖуГКуГ│уГИ'")
    print("7. 'чЩ╗щМ▓' уВТуВпуГкуГГуВп")
    
    print("\nЁЯФР APIуВвуВпуВ╗уВ╣ши▒хПпуБошинхоЪ:")
    print("1. ф╜ЬцИРуБЧуБЯуВвуГЧуГкуВТщБ╕цКЮ")
    print("2. 'APIуБоуВвуВпуВ╗уВ╣ши▒хПп' уВТщБ╕цКЮ")
    print("3. 'уВвуВпуВ╗уВ╣ши▒хПпуБош┐╜хКа' уВТуВпуГкуГГуВп")
    print("4. 'Microsoft Graph' уВТщБ╕цКЮ")
    print("5. 'уВвуГЧуГкуВ▒уГ╝уВ╖уГзуГ│уБоуВвуВпуВ╗уВ╣ши▒хПп' уВТщБ╕цКЮ")
    print("6. ф╗еф╕ЛуБоуВвуВпуВ╗уВ╣ши▒хПпуВТш┐╜хКа:")
    print("   - Mail.Send")
    print("   - User.Read")
    print("7. 'чобчРЖшАЕуБохРМцДПуВТф╕ОуБИуВЛ' уВТуВпуГкуГГуВп")
    
    print("\nЁЯФС уВпуГйуВдуВвуГ│уГИуВ╖уГ╝уВпуГмуГГуГИуБоф╜ЬцИР:")
    print("1. 'ши╝цШОцЫ╕уБиуВ╖уГ╝уВпуГмуГГуГИ' уВТщБ╕цКЮ")
    print("2. 'цЦ░уБЧуБДуВпуГйуВдуВвуГ│уГИуВ╖уГ╝уВпуГмуГГуГИ' уВТуВпуГкуГГуВп")
    print("3. шкмцШО: 'HUGAN JOB Mail Secret'")
    print("4. цЬЙхК╣цЬЯщЩР: '24уБЛцЬИ'")
    print("5. 'ш┐╜хКа' уВТуВпуГкуГГуВп")
    print("6. чФЯцИРуБХуВМуБЯхАдуВТуВ│уГФуГ╝я╝Иф╕Ах║жуБЧуБЛшбичд║уБХуВМуБ╛уБЫуВУя╝Й")
    
    print("\nЁЯУЛ х┐ЕшжБуБкцГЕха▒уБохПЦх╛Ч:")
    print("1. уГЖуГКуГ│уГИID: 'цжВшжБ' уГЪуГ╝уВ╕уБо 'уГЗуВгуГмуВпуГИуГк (уГЖуГКуГ│уГИ) ID'")
    print("2. уВпуГйуВдуВвуГ│уГИID: 'цжВшжБ' уГЪуГ╝уВ╕уБо 'уВвуГЧуГкуВ▒уГ╝уВ╖уГзуГ│ (уВпуГйуВдуВвуГ│уГИ) ID'")
    print("3. уВпуГйуВдуВвуГ│уГИуВ╖уГ╝уВпуГмуГГуГИ: ф╕КшиШуБзф╜ЬцИРуБЧуБЯхАд")

if __name__ == "__main__":
    try:
        # Azure ADшинхоЪуВмуВдуГЙуБошбичд║
        show_azure_setup_guide()
        
        print("\n" + "=" * 80)
        input("Azure ADшинхоЪуБМхоМф║ЖуБЧуБЯуВЙ Enter уВнуГ╝уВТцК╝уБЧуБжуБПуБауБХуБД...")
        
        # шинхоЪуГХуВбуВдуГлф╜ЬцИР
        success = create_microsoft365_config()
        
        if success:
            print("\nЁЯОЙ Microsoft 365шинхоЪуГХуВбуВдуГлф╜ЬцИРхоМф║Ж")
            print("цмбуБоуВ╣уГЖуГГуГЧ: python microsoft365_email_sender.py")
        else:
            print("\nтЭМ шинхоЪуГХуВбуВдуГлф╜ЬцИРхд▒цХЧ")
            
    except KeyboardInterrupt:
        print("\n\nтЭМ шинхоЪф╜ЬцИРуБМуВнуГгуГ│уВ╗уГлуБХуВМуБ╛уБЧуБЯ")
    except Exception as e:
        print(f"тЭМ уВиуГйуГ╝уБМчЩ║чФЯ: {e}")
        import traceback
        traceback.print_exc()
